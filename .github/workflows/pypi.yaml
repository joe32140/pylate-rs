name: Build and Publish Python 🐍 distributions

on:
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheel for ${{ matrix.variant.name }} on ${{ matrix.variant.os }} (Python ${{ matrix.variant.python-version }})
    runs-on: ${{ matrix.variant.os }}
    strategy:
      fail-fast: false
      matrix:
        variant:
          # Default variant
          - { name: "default", os: "macos-latest", python-version: "3.9" }
          - { name: "default", os: "macos-latest", python-version: "3.10" }
          - { name: "default", os: "macos-latest", python-version: "3.11" }
          - { name: "default", os: "macos-latest", python-version: "3.12" }
          - { name: "default", os: "macos-latest", python-version: "3.13" }
          - { name: "default", os: "ubuntu-latest", python-version: "3.9" }
          - { name: "default", os: "ubuntu-latest", python-version: "3.10" }
          - { name: "default", os: "ubuntu-latest", python-version: "3.11" }
          - { name: "default", os: "ubuntu-latest", python-version: "3.12" }
          - { name: "default", os: "ubuntu-latest", python-version: "3.13" }
          - { name: "default", os: "windows-latest", python-version: "3.9" }
          - { name: "default", os: "windows-latest", python-version: "3.10" }
          - { name: "default", os: "windows-latest", python-version: "3.11" }
          - { name: "default", os: "windows-latest", python-version: "3.12" }
          - { name: "default", os: "windows-latest", python-version: "3.13" }
          # Metal variant
          - { name: "metal", os: "macos-latest", python-version: "3.9" }
          - { name: "metal", os: "macos-latest", python-version: "3.10" }
          - { name: "metal", os: "macos-latest", python-version: "3.11" }
          - { name: "metal", os: "macos-latest", python-version: "3.12" }
          - { name: "metal", os: "macos-latest", python-version: "3.13" }
          # Accelerate variant
          - { name: "accelerate", os: "macos-latest", python-version: "3.9" }
          - { name: "accelerate", os: "macos-latest", python-version: "3.10" }
          - { name: "accelerate", os: "macos-latest", python-version: "3.11" }
          - { name: "accelerate", os: "macos-latest", python-version: "3.12" }
          - { name: "accelerate", os: "macos-latest", python-version: "3.13" }
          # MKL variant
          - { name: "mkl", os: "ubuntu-latest", python-version: "3.9" }
          - { name: "mkl", os: "ubuntu-latest", python-version: "3.10" }
          - { name: "mkl", os: "ubuntu-latest", python-version: "3.11" }
          - { name: "mkl", os: "ubuntu-latest", python-version: "3.12" }
          - { name: "mkl", os: "ubuntu-latest", python-version: "3.13" }
          - { name: "mkl", os: "windows-latest", python-version: "3.9" }
          - { name: "mkl", os: "windows-latest", python-version: "3.10" }
          - { name: "mkl", os: "windows-latest", python-version: "3.11" }
          - { name: "mkl", os: "windows-latest", python-version: "3.12" }
          - { name: "mkl", os: "windows-latest", python-version: "3.13" }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.variant.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.variant.python-version }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: pip install maturin>=1.8.6 numpy>=1.26.4

      - name: Generate pyproject.toml for ${{ matrix.variant.name }}
        run: python generate_configs.py ${{ matrix.variant.name }}

      - name: Build wheel
        run: maturin build --release --out dist

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.variant.name }}-${{ matrix.variant.os }}-py${{ matrix.variant.python-version }}
          path: dist/

  publish:
    name: Publish to PyPI
    needs: build-wheels
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
